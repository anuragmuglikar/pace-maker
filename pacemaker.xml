<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

broadcast chan VPace;
broadcast chan VSense;
//Times are in milliseconds
int minWait = 860;
int maxWait = 1260;
int VRP = 240;</declaration>
	<template>
		<name x="5" y="5">Heart</name>
		<declaration>// Place local declarations here.
clock h_clk;</declaration>
		<location id="id0" x="94" y="-263">
			<name x="111" y="-280">Idle</name>
			<label kind="invariant" x="85" y="-246">h_clk &lt;= VRP</label>
		</location>
		<location id="id1" x="-178" y="-263">
			<name x="-229" y="-289">Ready</name>
			<label kind="invariant" x="-263" y="-255">h_clk&lt;= maxWait</label>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-144" y="-229">h_clk &gt;= VRP</label>
			<label kind="assignment" x="-59" y="-229">h_clk = 0</label>
			<nail x="51" y="-204"/>
			<nail x="-152" y="-204"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-117" y="-340">VPace?</label>
			<label kind="assignment" x="-34" y="-348">h_clk = 0</label>
			<nail x="-161" y="-314"/>
			<nail x="-135" y="-323"/>
			<nail x="60" y="-323"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-101" y="-280">h_clk &gt;= minWait</label>
			<label kind="synchronisation" x="-160" y="-280">VSense!</label>
			<label kind="assignment" x="-8" y="-280">h_clk = 0</label>
		</transition>
	</template>
	<template>
		<name>Pacemaker</name>
		<declaration>int RI = 1500;
int LRI = 1100;
int HRI = 1500;
bool hpEnable;
bool hp;
clock v_clk;</declaration>
		<location id="id2" x="42" y="-1649">
			<name x="32" y="-1683">waitVRP</name>
			<label kind="invariant" x="32" y="-1632">v_clk &lt;= VRP</label>
		</location>
		<location id="id3" x="-408" y="-1649">
			<name x="-467" y="-1666">waitRI</name>
			<label kind="invariant" x="-450" y="-1632">v_clk &lt;= RI</label>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-356" y="-1615">v_clk &gt;= VRP</label>
			<label kind="assignment" x="-356" y="-1581">hpEnable = hp</label>
			<nail x="0" y="-1581"/>
			<nail x="-374" y="-1581"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-264" y="-1743">v_clk &gt;= RI</label>
			<label kind="synchronisation" x="-340" y="-1743">VPace!</label>
			<label kind="assignment" x="-162" y="-1743">v_clk = 0, RI = LRI, hp = false</label>
			<nail x="-399" y="-1675"/>
			<nail x="-365" y="-1717"/>
			<nail x="-34" y="-1717"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-323" y="-1675">VSense?</label>
			<label kind="assignment" x="-221" y="-1675">v_clk = 0, RI = HRI, hp = true</label>
		</transition>
	</template>
	<template>
		<name>Monitor</name>
		<declaration>clock tv;
bool vStarted;</declaration>
		<location id="id4" x="-255" y="-5780">
			<name x="-315" y="-5796">wait</name>
		</location>
		<location id="id5" x="-68" y="-5780">
			<name x="-78" y="-5814">VPaced</name>
			<committed/>
		</location>
		<location id="id6" x="-264" y="-5941">
			<name x="-274" y="-5975">VSensed</name>
			<committed/>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-204" y="-5806">VPace?</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="assignment" x="-221" y="-5738">vStarted = true, tv = 0</label>
			<nail x="-128" y="-5737"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="assignment" x="-230" y="-5941">vStarted = true,tv = 0</label>
			<nail x="-170" y="-5898"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-260" y="-5877">VSense?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
// List one or more processes to be composed into a system.
system Heart, Pacemaker, Monitor;
    </system>
	<queries>
		<query>
			<formula>Heart.Idle --&gt; Heart.Ready
			</formula>
			<comment>If the heart stays idle the person is dead and pacemaker will not work
			</comment>
		</query>
		<query>
			<formula>Pacemaker.waitVRP --&gt; Pacemaker.waitRI
			</formula>
			<comment>Pacemaker shouldn't sit in waitVRP forever
			</comment>
		</query>
		<query>
			<formula>A[] (Heart.Idle imply Heart.h_clk &lt;= VRP)
			</formula>
			<comment>The heart hould not be in the idle state for longer than VRP
			</comment>
		</query>
		<query>
			<formula>A[] (Pacemaker.waitVRP imply Pacemaker.v_clk&lt;= VRP)
			</formula>
			<comment>The ventricle should move to waitRI after VRP
			</comment>
		</query>
		<query>
			<formula>A[] (Monitor.VPaced imply Monitor.tv &lt;= Pacemaker.HRI and Monitor.tv &gt;= Pacemaker.LRI)
			</formula>
			<comment>If the pacemaker has paced the heart you want that to have occured between the HRI and the LRI.
			</comment>
		</query>
		<query>
			<formula>A[] (Monitor.VSensed imply Monitor.tv &lt;= Pacemaker.HRI)
			</formula>
			<comment>If you have sensed a Pacemaker event it should have happened before the LRI.
			</comment>
		</query>
		<query>
			<formula>A[] (Pacemaker.hpEnable imply Monitor.tv &lt;= Pacemaker.HRI)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[]!deadlock
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
